{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar root = document.querySelector(\".container\");\nvar masNumbers = [\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ]\n];\nvar gameStart = false;\nvar createGamer = false;\nvar endGame = false;\nvar winOrLose = false;\nvar score = 0;\nrender();\nfunction render() {\n    var header = '\\n    <div class=\"game-header\">\\n      <h1>2048</h1>\\n      <div class=\"controls\">\\n        <p class=\"info\">\\n          Score: <span class=\"game-score\">'.concat(score, '</span>\\n        </p>\\n        <button\\n          class=\"button ').concat(gameStart ? \"restart\" : \"start\", '\"\\n        ><span>').concat(gameStart ? \"Restart\" : \"Start\", \"</span></button>\\n      </div>\\n    </div>\\n  \");\n    var main = '\\n    <table class=\"game-field\">\\n      <tbody>\\n        <tr class=\"field-row\">\\n        '.concat(masNumbers[0].map(function(numb) {\n        return '<td class=\"field-cell field-cell--'.concat(numb, '\">').concat(numb, \"</td>\");\n    }).join(\"\"), '\\n        </tr>\\n\\n        <tr class=\"field-row\">\\n          ').concat(masNumbers[1].map(function(numb) {\n        return '<td class=\"field-cell field-cell--'.concat(numb, '\">').concat(numb, \"</td>\");\n    }).join(\"\"), '\\n        </tr>\\n\\n        <tr class=\"field-row\">\\n          ').concat(masNumbers[2].map(function(numb) {\n        return '<td class=\"field-cell field-cell--'.concat(numb, '\">').concat(numb, \"</td>\");\n    }).join(\"\"), '\\n        </tr>\\n\\n        <tr class=\"field-row\">\\n          ').concat(masNumbers[3].map(function(numb) {\n        return '<td class=\"field-cell field-cell--'.concat(numb, '\">').concat(numb, \"</td>\");\n    }).join(\"\"), \"\\n        </tr>\\n      </tbody>\\n    </table>\\n  \");\n    var footer = '\\n    <div class=\"message-container\">\\n      <p class=\"message message-lose '.concat(endGame ? winOrLose ? \"hidden\" : \"\" : \"hidden\", '\">You lose! Restart the game?</p>\\n      <p class=\"message message-win ').concat(endGame ? winOrLose ? \"\" : \"hidden\" : \"hidden\", '\">Winner! Congrats! You did it!</p>\\n      <p class=\"message message-start\" ').concat(createGamer ? \"hidden\" : \"\", '>\\n        Press \"Start\" to begin game. Good luck!\\n      </p>\\n    </div>\\n  ');\n    root.innerHTML = \"\".concat(header).concat(main).concat(footer);\n    var buttonStart = root.querySelector(\".button\");\n    buttonStart.addEventListener(\"click\", GameController);\n}\nvar touchStartX = 0;\nvar touchStartY = 0;\nvar touchEndX = 0;\nvar touchEndY = 0;\nfunction handleMove(key) {\n    if (endGame) return;\n    if (!createGamer) return;\n    switch(key){\n        case \"ArrowUp\":\n            var copyUp = up();\n            if (checkCopy(copyUp)) {\n                masNumbers = copyUp;\n                hightScore();\n                spawnNumb();\n            } else loseOrNo();\n            render();\n            break;\n        case \"ArrowDown\":\n            var copyDown = down();\n            if (checkCopy(copyDown)) {\n                masNumbers = copyDown;\n                hightScore();\n                spawnNumb();\n            } else loseOrNo();\n            render();\n            break;\n        case \"ArrowLeft\":\n            var copyLeft = left();\n            if (checkCopy(copyLeft)) {\n                masNumbers = copyLeft;\n                hightScore();\n                spawnNumb();\n            } else loseOrNo();\n            render();\n            break;\n        case \"ArrowRight\":\n            var copyRigth = rigth();\n            if (checkCopy(copyRigth)) {\n                masNumbers = copyRigth;\n                hightScore();\n                spawnNumb();\n            } else loseOrNo();\n            render();\n            break;\n        default:\n            break;\n    }\n}\ndocument.addEventListener(\"touchstart\", function(ev) {\n    var touch = ev.touches[0];\n    touchStartX = touch.clientX;\n    touchStartY = touch.clientY;\n});\ndocument.addEventListener(\"touchend\", function(ev) {\n    var touch = ev.changedTouches[0];\n    touchEndX = touch.clientX;\n    touchEndY = touch.clientY;\n    handleSwipe();\n});\nfunction handleSwipe() {\n    var deltaX = touchEndX - touchStartX;\n    var deltaY = touchEndY - touchStartY;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        if (deltaX > 30) handleMove(\"ArrowRight\");\n        else if (deltaX < -30) handleMove(\"ArrowLeft\");\n    } else {\n        if (deltaY > 30) handleMove(\"ArrowDown\");\n        else if (deltaY < -30) handleMove(\"ArrowUp\");\n    }\n}\ndocument.addEventListener(\"keydown\", function(ev) {\n    handleMove(ev.key);\n});\nfunction hightScore() {\n    var max = +masNumbers[0][0];\n    for(var i = 0; i < masNumbers.length; i++){\n        for(var j = 0; j < masNumbers[i].length; j++)if (max < +masNumbers[i][j]) max = +masNumbers[i][j];\n    }\n    score = max;\n    if (score >= 2048) {\n        endGame = true;\n        winOrLose = true;\n    }\n}\nfunction GameController() {\n    if (gameStart) {\n        restart();\n        return;\n    }\n    if (createGamer) clear();\n    createGamer = true;\n    score = 0;\n    spawnNumb();\n    spawnNumb();\n    render();\n}\nfunction restart() {\n    clear();\n    score = 0;\n    gameStart = false;\n    endGame = false;\n    winOrLose = false;\n    GameController();\n}\nfunction clear() {\n    masNumbers = [\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ]\n    ];\n}\nfunction twoOrFour() {\n    if (Math.floor(Math.random() * 11) > 9) return 4;\n    else return 2;\n}\nfunction spawnNumb() {\n    var indexOfEmpty = [];\n    for(var i = 0; i < masNumbers.length; i++){\n        for(var j = 0; j < masNumbers[0].length; j++)if (masNumbers[i][j] === \"\") indexOfEmpty.push({\n            x: i,\n            y: j\n        });\n    }\n    if (indexOfEmpty.length === 0) {\n        endGame = true;\n        return;\n    }\n    var newPosition = Math.floor(Math.random() * indexOfEmpty.length);\n    masNumbers[indexOfEmpty[newPosition].x][indexOfEmpty[newPosition].y] = twoOrFour();\n}\nfunction up() {\n    gameStart = true;\n    var copy = createCopy();\n    for(var j = 0; j < copy.length; j++){\n        var temp = [];\n        for(var i = 0; i < copy.length; i++)temp.push(copy[i][j]);\n        temp = slide(temp);\n        for(var i1 = 0; i1 < copy.length; i1++)copy[i1][j] = \"\";\n        for(var i2 = 0; i2 < temp.length; i2++)copy[i2][j] = temp[i2];\n    }\n    return copy;\n}\nfunction down() {\n    gameStart = true;\n    var copy = createCopy();\n    for(var j = 0; j < copy.length; j++){\n        var temp = [];\n        for(var i = 0; i < copy.length; i++)temp.push(copy[i][j]);\n        temp = slide(temp).reverse();\n        for(var i1 = 0; i1 < copy.length; i1++)copy[i1][j] = \"\";\n        for(var i2 = copy.length - 1, k = 0; k < temp.length; k++, i2--)copy[i2][j] = temp[k];\n    }\n    return copy;\n}\nfunction left() {\n    var _loop = function(i) {\n        var teml = slide(copy[i]);\n        copy[i].forEach(function(el, index, mas) {\n            return mas[index] = \"\";\n        });\n        for(var j = 0; j < teml.length; j++)copy[i][j] = teml[j];\n    };\n    gameStart = true;\n    var copy = createCopy();\n    for(var i = 0; i < copy.length; i++)_loop(i);\n    return copy;\n}\nfunction rigth() {\n    var _loop = function(i) {\n        var teml = slide(copy[i]).reverse();\n        copy[i].forEach(function(el, index, mas) {\n            return mas[index] = \"\";\n        });\n        for(var k = 0, j = copy.length - 1; k < teml.length; k++, j--)copy[i][j] = teml[k];\n    };\n    gameStart = true;\n    var copy = createCopy();\n    for(var i = 0; i < copy.length; i++)_loop(i);\n    return copy;\n}\nfunction slide(masiv) {\n    var mas = masiv.filter(function(x) {\n        return x !== \"\";\n    });\n    for(var i = 1; i < mas.length; i++)if (mas[i] === mas[i - 1]) {\n        mas[i - 1] = mas[i] + mas[i];\n        mas[i] = \"\";\n    }\n    return mas.filter(function(x) {\n        return x !== \"\";\n    });\n}\nfunction createCopy() {\n    var copy = [\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        [\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ]\n    ];\n    for(var i = 0; i < masNumbers.length; i++)for(var j = 0; j < masNumbers[i].length; j++)copy[i][j] = masNumbers[i][j];\n    return copy;\n}\nfunction checkCopy(copy) {\n    for(var i = 0; i < masNumbers.length; i++)for(var j = 0; j < masNumbers[i].length; j++){\n        if (masNumbers[i][j] !== copy[i][j]) return true;\n    }\n    return false;\n}\nfunction loseOrNo() {\n    var l = checkCopy(left());\n    var r = checkCopy(rigth());\n    var u = checkCopy(up());\n    var d = checkCopy(down());\n    if (l || r || u || d) ;\n    else {\n        endGame = true;\n        winOrLose = false;\n    }\n}\n\n//# sourceMappingURL=index.ec962c63.js.map\n","'use strict';\n\nconst root = document.querySelector('.container');\n\nlet masNumbers = [\n  ['', '', '', ''],\n  ['', '', '', ''],\n  ['', '', '', ''],\n  ['', '', '', ''],\n];\n\nlet gameStart = false;\nlet createGamer = false;\nlet endGame = false;\nlet winOrLose = false;\n\nlet score = 0;\n\nrender();\n\nfunction render() {\n  const header = `\n    <div class=\"game-header\">\n      <h1>2048</h1>\n      <div class=\"controls\">\n        <p class=\"info\">\n          Score: <span class=\"game-score\">${score}</span>\n        </p>\n        <button\n          class=\"button ${gameStart ? 'restart' : 'start'}\"\n        ><span>${gameStart ? 'Restart' : 'Start'}</span></button>\n      </div>\n    </div>\n  `;\n\n  const main = `\n    <table class=\"game-field\">\n      <tbody>\n        <tr class=\"field-row\">\n        ${masNumbers[0]\n    .map(\n      (numb) => `<td class=\"field-cell field-cell--${numb}\">${numb}</td>`,\n    )\n    .join('')}\n        </tr>\n\n        <tr class=\"field-row\">\n          ${masNumbers[1]\n    .map(\n      (numb) =>\n        `<td class=\"field-cell field-cell--${numb}\">${numb}</td>`,\n    )\n    .join('')}\n        </tr>\n\n        <tr class=\"field-row\">\n          ${masNumbers[2]\n    .map(\n      (numb) =>\n        `<td class=\"field-cell field-cell--${numb}\">${numb}</td>`,\n    )\n    .join('')}\n        </tr>\n\n        <tr class=\"field-row\">\n          ${masNumbers[3]\n    .map(\n      (numb) =>\n        `<td class=\"field-cell field-cell--${numb}\">${numb}</td>`,\n    )\n    .join('')}\n        </tr>\n      </tbody>\n    </table>\n  `;\n\n  const footer = `\n    <div class=\"message-container\">\n      <p class=\"message message-lose ${\n  endGame ? (winOrLose ? 'hidden' : '') : 'hidden'\n}\">You lose! Restart the game?</p>\n      <p class=\"message message-win ${\n  endGame ? (winOrLose ? '' : 'hidden') : 'hidden'\n}\">Winner! Congrats! You did it!</p>\n      <p class=\"message message-start\" ${createGamer ? 'hidden' : ''}>\n        Press \"Start\" to begin game. Good luck!\n      </p>\n    </div>\n  `;\n\n  root.innerHTML = `${header}${main}${footer}`;\n\n  const buttonStart = root.querySelector('.button');\n\n  buttonStart.addEventListener('click', GameController);\n}\n\nlet touchStartX = 0;\nlet touchStartY = 0;\nlet touchEndX = 0;\nlet touchEndY = 0;\n\nfunction handleMove(key) {\n  if (endGame) {\n    return;\n  }\n\n  if (!createGamer) {\n    return;\n  }\n\n  switch (key) {\n    case 'ArrowUp':\n      const copyUp = up();\n\n      if (checkCopy(copyUp)) {\n        masNumbers = copyUp;\n        hightScore();\n        spawnNumb();\n      } else {\n        loseOrNo();\n      }\n      render();\n      break;\n    case 'ArrowDown':\n      const copyDown = down();\n\n      if (checkCopy(copyDown)) {\n        masNumbers = copyDown;\n        hightScore();\n        spawnNumb();\n      } else {\n        loseOrNo();\n      }\n      render();\n      break;\n    case 'ArrowLeft':\n      const copyLeft = left();\n\n      if (checkCopy(copyLeft)) {\n        masNumbers = copyLeft;\n        hightScore();\n        spawnNumb();\n      } else {\n        loseOrNo();\n      }\n      render();\n      break;\n    case 'ArrowRight':\n      const copyRigth = rigth();\n\n      if (checkCopy(copyRigth)) {\n        masNumbers = copyRigth;\n        hightScore();\n        spawnNumb();\n      } else {\n        loseOrNo();\n      }\n      render();\n      break;\n    default:\n      break;\n  }\n}\n\ndocument.addEventListener('touchstart', (ev) => {\n  const touch = ev.touches[0];\n\n  touchStartX = touch.clientX;\n  touchStartY = touch.clientY;\n});\n\ndocument.addEventListener('touchend', (ev) => {\n  const touch = ev.changedTouches[0];\n\n  touchEndX = touch.clientX;\n  touchEndY = touch.clientY;\n\n  handleSwipe();\n});\n\nfunction handleSwipe() {\n  const deltaX = touchEndX - touchStartX;\n  const deltaY = touchEndY - touchStartY;\n\n  if (Math.abs(deltaX) > Math.abs(deltaY)) {\n    if (deltaX > 30) {\n      handleMove('ArrowRight');\n    } else if (deltaX < -30) {\n      handleMove('ArrowLeft');\n    }\n  } else {\n    if (deltaY > 30) {\n      handleMove('ArrowDown');\n    } else if (deltaY < -30) {\n      handleMove('ArrowUp');\n    }\n  }\n}\n\ndocument.addEventListener('keydown', (ev) => {\n  handleMove(ev.key);\n});\n\nfunction hightScore() {\n  let max = +masNumbers[0][0];\n\n  for (let i = 0; i < masNumbers.length; i++) {\n    for (let j = 0; j < masNumbers[i].length; j++) {\n      if (max < +masNumbers[i][j]) {\n        max = +masNumbers[i][j];\n      }\n    }\n  }\n\n  score = max;\n\n  if (score >= 2048) {\n    endGame = true;\n    winOrLose = true;\n  }\n}\n\nfunction GameController() {\n  if (gameStart) {\n    restart();\n\n    return;\n  }\n\n  if (createGamer) {\n    clear();\n  }\n  createGamer = true;\n  score = 0;\n  spawnNumb();\n  spawnNumb();\n\n  render();\n}\n\nfunction restart() {\n  clear();\n  score = 0;\n  gameStart = false;\n  endGame = false;\n  winOrLose = false;\n  GameController();\n}\n\nfunction clear() {\n  masNumbers = [\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n  ];\n}\n\nfunction twoOrFour() {\n  if (Math.floor(Math.random() * 11) > 9) {\n    return 4;\n  } else {\n    return 2;\n  }\n}\n\nfunction spawnNumb() {\n  const indexOfEmpty = [];\n\n  for (let i = 0; i < masNumbers.length; i++) {\n    for (let j = 0; j < masNumbers[0].length; j++) {\n      if (masNumbers[i][j] === '') {\n        indexOfEmpty.push({\n          x: i,\n          y: j,\n        });\n      }\n    }\n  }\n\n  if (indexOfEmpty.length === 0) {\n    endGame = true;\n\n    return;\n  }\n\n  const newPosition = Math.floor(Math.random() * indexOfEmpty.length);\n\n  masNumbers[indexOfEmpty[newPosition].x][indexOfEmpty[newPosition].y]\n    = twoOrFour();\n}\n\nfunction up() {\n  gameStart = true;\n\n  const copy = createCopy();\n\n  for (let j = 0; j < copy.length; j++) {\n    let temp = [];\n\n    for (let i = 0; i < copy.length; i++) {\n      temp.push(copy[i][j]);\n    }\n    temp = slide(temp);\n\n    for (let i = 0; i < copy.length; i++) {\n      copy[i][j] = '';\n    }\n\n    for (let i = 0; i < temp.length; i++) {\n      copy[i][j] = temp[i];\n    }\n  }\n\n  return copy;\n}\n\nfunction down() {\n  gameStart = true;\n\n  const copy = createCopy();\n\n  for (let j = 0; j < copy.length; j++) {\n    let temp = [];\n\n    for (let i = 0; i < copy.length; i++) {\n      temp.push(copy[i][j]);\n    }\n    temp = slide(temp).reverse();\n\n    for (let i = 0; i < copy.length; i++) {\n      copy[i][j] = '';\n    }\n\n    for (let i = copy.length - 1, k = 0; k < temp.length; k++, i--) {\n      copy[i][j] = temp[k];\n    }\n  }\n\n  return copy;\n}\n\nfunction left() {\n  gameStart = true;\n\n  const copy = createCopy();\n\n  for (let i = 0; i < copy.length; i++) {\n    const teml = slide(copy[i]);\n\n    copy[i].forEach((el, index, mas) => (mas[index] = ''));\n\n    for (let j = 0; j < teml.length; j++) {\n      copy[i][j] = teml[j];\n    }\n  }\n\n  return copy;\n}\n\nfunction rigth() {\n  gameStart = true;\n\n  const copy = createCopy();\n\n  for (let i = 0; i < copy.length; i++) {\n    const teml = slide(copy[i]).reverse();\n\n    copy[i].forEach((el, index, mas) => (mas[index] = ''));\n\n    for (let k = 0, j = copy.length - 1; k < teml.length; k++, j--) {\n      copy[i][j] = teml[k];\n    }\n  }\n\n  return copy;\n}\n\nfunction slide(masiv) {\n  const mas = masiv.filter((x) => x !== '');\n\n  for (let i = 1; i < mas.length; i++) {\n    if (mas[i] === mas[i - 1]) {\n      mas[i - 1] = mas[i] + mas[i];\n      mas[i] = '';\n    }\n  }\n\n  return mas.filter((x) => x !== '');\n}\n\nfunction createCopy() {\n  const copy = [\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n  ];\n\n  for (let i = 0; i < masNumbers.length; i++) {\n    for (let j = 0; j < masNumbers[i].length; j++) {\n      copy[i][j] = masNumbers[i][j];\n    }\n  }\n\n  return copy;\n}\n\nfunction checkCopy(copy) {\n  for (let i = 0; i < masNumbers.length; i++) {\n    for (let j = 0; j < masNumbers[i].length; j++) {\n      if (masNumbers[i][j] !== copy[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction loseOrNo() {\n  const l = checkCopy(left());\n  const r = checkCopy(rigth());\n  const u = checkCopy(up());\n  const d = checkCopy(down());\n\n  if (l || r || u || d) {\n  } else {\n    endGame = true;\n    winOrLose = false;\n  }\n}\n"],"names":["root","document","querySelector","masNumbers","gameStart","createGamer","endGame","winOrLose","score","render","header","concat","main","map","numb","join","footer","innerHTML","buttonStart","addEventListener","GameController","clear","spawnNumb","touchStartX","touchStartY","touchEndX","touchEndY","handleMove","key","copyUp","up","checkCopy","hightScore","loseOrNo","copyDown","down","copyLeft","left","copyRigth","rigth","max","i","length","j","indexOfEmpty","push","x","y","newPosition","Math","floor","random","copy","createCopy","temp","slide","i1","i2","reverse","k","_loop","teml","forEach","el","index","mas","masiv","filter","l","r","u","d","ev","touch","touches","clientX","clientY","deltaX","deltaY","changedTouches","abs"],"version":3,"file":"index.ec962c63.js.map"}